setwd("J:/R-programming/Courses/Machine Learning A-Z™ Hands-On Python & R In Data Science/Classification/Naive Bayes")
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[, 1:2]= scale(training_set[, 1:2])
test_set[, 1:2]= scale(test_set[,1:2])
# Fitting SVM model on the data set
library('e1071')
naive=naiveBayes(x=training_set[-3],y=training_set$Purchased)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
setwd("J:/R-programming/Courses/Machine Learning A-Z™ Hands-On Python & R In Data Science/Classification/Decision Tree")
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
split=sample.split(df$Purchased,SplitRatio = 0.75)
set.seed(1234)
training_set=subset(df,split==TRUE)
# Feature Scaling
training_set[, 1:2]= scale(training_set[, 1:2])
test_set=subset(df,split==FALSE)
test_set[, 1:2]= scale(test_set[,1:2])
# Fitting SVM model on the data set
library('e1071')
naive=naiveBayes(x=training_set[-3],y=training_set$Purchased)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[, 1:2]= scale(training_set[, 1:2])
test_set[, 1:2]= scale(test_set[,1:2])
# Fitting SVM model on the data set
library('rpart')
naive=rpart(formula = df$Purchased ~ .,
data=training_set)
naive=rpart(formula = Purchased ~ .,
data=training_set)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('rpart')
naive=rpart(formula = Purchased ~ .,
data=training_set)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Fitting SVM model on the data set
library('rpart')
naive=rpart(formula = Purchased~ .,
data=training_set)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
df$Purchased=factor(df$Purchased,levels = c(0,1))
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('rpart')
naive=rpart(formula = Purchased~ .,
data=training_set)
y_pred=predict(naive,newdata = test_set[-3])
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
y_pred=predict(naive,newdata = test_set[-3],type = 'class')
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
setwd("J:/R-programming/Courses/Machine Learning A-Z™ Hands-On Python & R In Data Science/Classification/Random Forest")
install.packages("randomForest")
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
df$Purchased=factor(df$Purchased,levels = c(0,1))
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('randomForest')
# Random Forest Classification
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Encoding the target features as factors
df$Purchased=factor(df$Purchased,levels = c(0,1))
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('randomForest')
ran=randomForest(x=training_set[-3],
y=training_set$Purchased,
ntree = 10)
# Predicting the test set result
y_pred=predict(naive,newdata = test_set[-3],type = 'class')
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
df$Purchased=factor(df$Purchased,levels = c(0,1))
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
split=sample.split(df$Purchased,SplitRatio = 0.75)
set.seed(1234)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('randomForest')
ran=randomForest(x=training_set[-3],
y=training_set$Purchased,
ntree = 10)
y_pred=predict(ran,newdata = test_set[-3],type = 'class')
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
# Random Forest Classification
# Importing the dataset
df= read.csv('Social_Network_Ads.csv')
df=df[,3:5]
df
# Encoding the target features as factors
df$Purchased=factor(df$Purchased,levels = c(0,1))
# Splitting dataset into train and test set
# install package('caTools)
library('caTools')
set.seed(1234)
split=sample.split(df$Purchased,SplitRatio = 0.75)
training_set=subset(df,split==TRUE)
test_set=subset(df,split==FALSE)
# Feature Scaling
training_set[-3]= scale(training_set[-3])
test_set[-3]= scale(test_set[-3])
# Fitting SVM model on the data set
library('randomForest')
ran=randomForest(x=training_set[-3],
y=training_set$Purchased,
ntree = 500)
# Predicting the test set result
y_pred=predict(ran,newdata = test_set[-3],type = 'class')
y_pred
# Making the confusion matrix
cm=table(test_set[, 3],y_pred)
cm
